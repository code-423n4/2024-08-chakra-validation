issue,title,primary finding,validator comment,status,root cause (URL),size
findings-10,Settlements can be initiated with invalid arguments,validation-166,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L167-L232,28
findings-100,Invariant Violation: Missing address validation for handler and recipient addresses,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,64
findings-101,Wrong implementation logic,,invalid,Unsatisfactory,,25
findings-102,The lack of fees and a minimum value for cross-chain transfers makes the Chakra Network prone to DoS attacks.,findings-52,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L111,176
findings-104,Validator signatures can be replayed on different chains to trigger `ChakraSettlement.receive_cross_chain_msg`,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,147
findings-105,The required_validators_num can be bypassed by calling check_chakra_signatures with an array of duplicate signatures on the Cairo bridge side,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,176
findings-107,Other managers can add and remove managers in Starknet,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,80
findings-108,Token theft is possible in Starknet through replay attack to receive_cross_chain_msg,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,90
findings-109,An attacker can perform a DoS attack on the Chakra Network by providing a large payload to the `send_cross_chain_msg` function.,findings-109,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L146-L155,119
findings-11,Malicious actors can manipulate the `cross_chain_callback` callback,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,141
findings-110,Cross chain messages can be replayed in Starknet because forgot to check for UNKNOW status,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,87
findings-111,The required_validators check can be bypassed in the `SettlementSignatureVerifier` contract because neither the `verifyECDSA` nor the ChakraSettlement's functions check that signatures are unique,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,251
findings-112,Invariant Violation: Zero amount can be sent in Starknet,validation-166,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L167-L232,96
findings-113,Invariant Violation: Improper update of the cross-chain transaction status after the callback in Starknet,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,109
findings-115,There is no refund mechanism in `ChakraSettlement.processCrossChainCallback` or `ChakraSettlementHandler.receive_cross_chain_callback` function,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,207
findings-116,Receiving cross-chain message can never be completed on destination chain under `MintBurn` or `LockMint` mode when `ChakraSettlementHandler` contract's `token` is a mintable token that does not implement a `mint_to` function,validation-181,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L225-L236,142
findings-117,`ChakraSettlement.receive_cross_chain_msg` function can be reentered when `ChakraSettlementHandler` contract's `token` is a token that has hooks,findings-126,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L354,174
findings-118,`ChakraSettlement.receive_cross_chain_msg` and `ChakraSettlement.receive_cross_chain_callback` functions do not ensure that receiving `ChakraSettlement` contract's `contract_chain_name` must match `to_chain` corresponding to respective `txid` input though they should,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,304
findings-119,Burnable ERC20 tokens that do not implement a `burn_from` function cannot be supported,validation-181,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L225-L236,105
findings-120,(Solidity) The same signature from a single validator can be re-used to bypass the `required_validators` check,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,246
findings-121,Handler on destination chain that is not on whitelist for source chain can successfully receive cross-chain message though it should not be allowed to,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,327
findings-122,`ChakraSettlement` contract's `BaseSettlement.set_required_validators_num` function does not call corresponding `signature_verifier`'s `SettlementSignatureVerifier.set_required_validators_num` function though it should,findings-8,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/BaseSettlement.sol#L121-L126,75
findings-123,"Message hashes for signatures for calling `ChakraSettlement.receive_cross_chain_msg` and `ChakraSettlement.verifySignature` functions do not encode necessary EIP-712's `domainSeparator` data like `name`, `version`, `chainId`, and `verifyingContract`, which can cause corresponding signatures to be misused",findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,126
findings-124,SettlementHandler does not implement IERC777Recipient interface,findings-124,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L393,27
findings-125,Cross-chain ERC20 settlement initiated on source chain under `LockUnlock` or `BurnUnlock` mode can remain not completed on destination chain,validation-181,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L225-L236,189
findings-126,The PENDING status is not written to the `received_tx` is in the settlement before calling the handler in Cairo,findings-126,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L354,84
findings-128,The tokens will be locked in the event of a cross chain message failure,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,58
findings-129,`CrossChainHandleResult` event incorrectly emitted in `ChakraSettlement::receive_cross_chain_msg`,findings-129,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L235,99
findings-13,Validator signatures may not be used,findings-13,probably QA,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L182-L197,47
findings-131,Missing `CrossChainMsgStatus::UNKNOW` check for transactions may allow for transaction replay in `settlement.cairo`,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,108
findings-132,(Cairo) The same signature from a single validator can be re-used to bypass the `required_validators_num` check,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,48
findings-14,Callbacks are not properly handled on Starknet,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,42
findings-15,Unable to receive tokens on the destination chain or store results on the source chain due to mishandling of signatures,findings-13,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L182-L197,83
findings-17,Users lose their tokens if their cross-chain message fails,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,29
findings-18,A single validator can steal tokens due to lack of duplicate signature checking,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,117
findings-19,Upgradeable contracts do not have a constructor that calls _disableInitializers(),findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,37
findings-2,Mismatch between nonces in `Settlement` and `Handler`,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,45
findings-20,"On Starknet, a single validator can steal tokens due to lack of duplicate signature checking",findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,54
findings-21,"Anyone can make the settlement and handler's nonce mismatch, causing receive_cross_chain_callback to fail",findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,187
findings-22,Signatures are not checked to be unique,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,54
findings-23,Malicios user can frontrun calls to receive_cross_chain_callback with an incorrect from_chain parameter,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,126
findings-24,Nonce managers in Settlement and Handler contracts can become out of sync resulting in reverting callbacks,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,146
findings-25,There is no way to unlock funds for unexpectedly failed transctions,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,67
findings-26,Call to set required validators number is not forwarded to the signature verifier resulting in incorrect number of required validators,findings-8,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/BaseSettlement.sol#L121-L126,59
findings-27,"Signature replay attack is possible in receive_cross_chain_msg due to lack of toChain verification, allowing token theft",findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,223
findings-28,Lack of a specific token refund mechanism after cross-chain message execution fails,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,53
findings-29,"Starknet manager management functions are not called by owner. A single manager can delete all managers, then nobody can add new manager",findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,78
findings-3,Multiple signatures can be bypassed,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,120
findings-30,The LockMint and BurnUnlock modes cannot be used,findings-30,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L127,211
findings-31,Sharing the Settlement contract can result in txid calculation errors,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,219
findings-32,Incorrect signature verification according to ERC-191,findings-13,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L182-L197,185
findings-33,A handler cannot handle situations where multiple chains are facing different modes,findings-30,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L127,196
findings-34,Forcing the failure of callback message by manipulating `from_chain`,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,215
findings-35,Duplicate signature attack to bypass the condition of minimum required_validators in EVM-based blockchains,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,359
findings-36,Lack of mechanism to recover funds when cross-chain message fails,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,39
findings-37,Changing a user's nonce to either burn the wrong amount of tokens during a callback or to stop the callback message from being executed in EVM-based blockchains,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,792
findings-38,Mismatch in the message status between ChakraSettlement and ChakraSettlementHandler,findings-38,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L375,111
findings-39,Replay attack due to missing chain id in the event of a hard fork,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,179
findings-4,Required validators count can be bypassed,findings-4,Both Cairo and Solidity versions,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,30
findings-40,Duplicate signature attack to bypass the condition of minimum required_validators_num in Starknet,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,85
findings-41,Wrong usage of transaction originator address instead of caller address,findings-41,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L303,229
findings-42,Funds theft by repeatedly calling receive_cross_chain_msg,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,136
findings-43,Unable to handle failure when Handler.receive_cross_chain_msg reverts,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,108
findings-44,Does not check if to_chain and to_handler is whitelisted in cross_chain_erc20_settlement,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,186
findings-45,Replay attack across different EVM-based chains caused by the lack of `to_chain` verification,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,342
findings-46,Bridging from Starknet to Starknet causes mismatch between minted ckrBTC and BTC transferred to MuSig2,validation-248,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L115,159
findings-47,Changing `required_validators_num` prevents delivery of previously signed messages,findings-47,"invalid, more validators could sign",Unsatisfactory,,69
findings-48,Missing handling of `cross_chain_msg_status` in `handler_erc20::receive_cross_chain_callback` leads to critical issue,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,203
findings-49,"Improper manager authorization allows managers to modify other managers, breaking hierarchy and increasing risk",findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,95
findings-5,Cross-chain transfers are replayable across different chains,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,31
findings-50,Manager role not transferred during ownership change in Starknet,findings-50,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/ckr_btc.cairo#L134,124
findings-51,Changing msg_count to burn the wrong amount of tokens during a callback in Starknet,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,468
findings-52,Potential DoS attack due to lack of charging fees for cross-chain message processing,findings-52,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L111,34
findings-53,Return values of transfer not checked on Starknet,findings-53,OOS,Unsatisfactory,,55
findings-54,Ownership transfer does not update `DEFAULT_ADMIN_ROLE` properly on EVM-based blockchains,findings-54,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/BaseSettlement.sol#L12,162
findings-56,Mismatch between the settlement and the nonce in handler_erc20 could cause the receive_cross_chain_callback to fail for all users on Starknet,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,111
findings-57,Sarknet's receive_cross_chain_callback burns tokens and processes as success regardless of real result,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,95
findings-58,Replay attack allows attacker to call `receive_cross_chain_msg()` and `receive_cross_chain_callback()` on different chains,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,43
findings-59,Function `handler_erc20.receive_cross_chain_callback()` in Cairo set incorrect `tx_status` ,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,64
findings-6,Starknet messages can be executed multiple times,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,23
findings-60,[Medium] Cairo version `cross_chain_erc20_settlement()` set `CreatedCrossChainTx.from` incorrectly,validation-87,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/handler_erc20.cairo#L188,53
findings-61,One validator could bypass the `required_validators_num` check because of not checking for duplicate signature/signers,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,76
findings-62,Cairo `settlement.receive_cross_chain_msg()` can be called again to drain funds because it does not check `status` if TX is processed or not ,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,70
findings-63,"`_Settlement_handler_init()` and `_Settlement_init()` are public, can be called again to override important config values",findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,45
findings-64,No mechanism to get back the funds when the cross-chain transfer failed,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,65
findings-65,Solidity `cross_chain_erc20_settlement()` set incorrect value for `create_cross_txs[txid].from_token`,validation-32,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L160,49
findings-66,Cairo `settlement.receive_cross_chain_callback()` confuse `from` and `to`,findings-66,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L373-L381,40
findings-67,Solidity `cross_chain_erc20_settlement()` does not check `handler_whitelist[to_chain][to_handler] == true`,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,44
findings-68,Hash collision `message_hash_receive()` and `message_hash_callback()`,,no clear impact,Unsatisfactory,,43
findings-7,`SettlementSignatureVerifier::verify` Allows Bypass with Duplicate Validator Signatures,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,313
findings-70,The use of an unverified payload_type parameter allows manipulation of PayloadType,validation-462,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/settlement/src/settlement.cairo#L337,140
findings-71,"`receive_cross_chain_msg` function doesn't check the `tx_status` which will allow Signature Replay Attacks, allowing attackers to mint unlimited tokens",findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,126
findings-72,Cross-Chain Signature Replay Attacks possible,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,58
findings-73,`check_chakra_signatures` can get bypassed which will allow attackers to mint unlimited tokens,findings-86,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L162-L166,79
findings-74,Incorrect logic in function `verifyECDSA`,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,72
findings-75,Multiple signatures can be bypassed in Cairo,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,67
findings-76,An attacker can exploit the cross-chain mechanism as an arbitrary cross-chain messaging or execution,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,312
findings-77,Sharing the Settlement contract can result in txid calculation errors in cairo,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,103
findings-78,Attackers can Drain Contract Valance with Re-entrancy from Hookable Tokens i.e ERC777 tokens,findings-126,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L354,78
findings-79," In a Cairo program, `receive_cross_chain_msg` can be executed multiple times by anyone.",findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,88
findings-8,"SettlementSignatureVerifier's required_validators is not updated, resulting in a low or high number of signatures being required",findings-8,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/BaseSettlement.sol#L121-L126,60
findings-80,The method Id is not checked on the EVM-based `ChakraSettlementHandler` and assumes all operations are `Transfer`.,findings-80,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L318-L351,202
findings-81,Malicious actors can cause the Cairo program to fail in executing cross-chain messages properly.,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,113
findings-82,"Solidity's `SettlementSignatureVerifier.verify` does not check for duplicate signatures from the same validator, enabling malicious Settlement execution.",findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,180
findings-83,Managers can add or remove other managers on `settlement` and `ckr_btc`,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,133
findings-84,handler's `receive_cross_chain_callback()` will always set the tx_status to `SETTLED` on source chain & burn the tokens (MintBurn Mode) even when the msg fails on destination,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,83
findings-85,The receive_cross_chain_msg function has potential replay attack risks.,findings-85,future upgrade assumption,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L108,83
findings-86,`required_validators_num` is not set immediately in `settlement.cairo`. An attacker could create a malicious request right after the contract is created,findings-86,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L162-L166,143
findings-87,"`settlement.cairo`'s `check_chakra_signatures` does not check for duplicate signatures from the same validator, enabling malicious Settlement execution.",findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,124
findings-88,Lack of a `received_tx.status` check within `settlement.cairo`'s `receive_cross_chain_msg` allows an attacker to repeatedly call valid processed requests.,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,193
findings-89,Lack of `chain ID` check in the destination chain can lead to signature replay in specific circumstances,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,70
findings-9,Minting/burning will not be possible after the upgrade,,OOS,Unsatisfactory,,41
findings-90,Insecure nonce management allows attackers to permanently cause cross-chain callbacks to revert,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,1119
findings-91,Repeated signatures can bypass the minimum signature requirement,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,81
findings-93,`add_manager` and `remove_manager` will always revert,,invalid. owner is granted admin role,Unsatisfactory,,43
findings-94,"In Cairo, lack of a specific token refund mechanism after cross-chain message execution fails",findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,27
findings-95,Users will lose their funds if the cross-chain request is settled with a `Failed` status.,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,214
findings-97,"In Cairo, the LockMint and BurnUnlock modes cannot be used",findings-30,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L127,83
findings-98,A Malicious User Can Frontrun `remove_handler` to cause a Griefing Attack in `MintBurn` mode,validation-638,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L124,43
findings-99,Inconsistent settlement status handling between the EVM handler and the StarkNet handler.,findings-99,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L311-L313,217
validation-100,ERC20Transfer payload should be validated against a whitelisted mapping for Token identifier across chains,,insufficient proof,Unsatisfactory,,26
validation-106,Missing Replay Protection in receive_cross_chain_msg of ChakraSettlement Contract (Cairo) ,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,146
validation-107, Improper Handling of Cross-Chain Message Status  in receive_cross_chain_callback Function of ERC20Handler Contract ,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,81
validation-109,Improper tx_id creation between settlement and handler contract leading to broken callback logic (Cairo),findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,74
validation-11,Missing Upgrade Authorization in TokenRoles Contract,validation-730,"invalid, abstract contract",Unsatisfactory,,37
validation-111,Lack of Input Validation,,AI generated,Unsatisfactory,,70
validation-113,Lack of input validation in the decode_message Function,,AI generated,Unsatisfactory,,56
validation-117,misspelling of the decode_transfer,validation-117,QA,Unsatisfactory,,20
validation-118,Improper txId creation between settlement and handler contract leading to broken callback logic (Solidity),findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,100
validation-120,OwnableTwoStep allows a pending owner to accept ownership after the original owner has renounced ownership,validation-120,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/settlement/src/settlement.cairo#L13,26
validation-121,Insufficient signature verification in Solidity contract,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,89
validation-123,"The transfer may be reverted when cross-chain, causing the cross-chain to be unable to be completed and the user to be unable to refund.",findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,34
validation-124,"When cross-chain fails, the protocol will not refund users",findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,30
validation-125,An attacker can maliciously change the cross-chain status through front-running,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,31
validation-126,"The txid in ChakraSettlementUpgradeTest and ChakraSettlementHandler cannot correspond, and cross-chain cannot work properly.",findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,29
validation-127,"Signatures can be reused, allowing users to withdraw funds repeatedly",,invalid,Unsatisfactory,,63
validation-133,Unprotected Initialization in `ChakraSettlementHandler`,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,172
validation-138,ChakraSettlementHandler - to_handler is not checked if it's whitelisted,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,43
validation-139,Wrong check about whitelisted handlers in handler_erc20.cairo::receive_cross_chain_msg,,invalid,Unsatisfactory,,39
validation-140,"Users can create 0 amount token transfers, breaking a key invariant of the protocol",validation-166,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L167-L232,34
validation-142,Invalid `SettlementMode` Allows Sending Tokens Without Locking,validation-586,no impact,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L123-L131,54
validation-143,Status of cross_chain_msg_id not checked in settlement.cairo::receive_cross_chain_msg making replay attacks possible,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,60
validation-144,send_cross_chain_msg should be callable only by Handler contract but lacks access control in both settlement.cairo and ChakraSettlement.sol,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,52
validation-145, Lack of Event Emission for Critical Actions,,QA,Unsatisfactory,,42
validation-146,too much power is given to the owner if the contract,,OOS,Unsatisfactory,,33
validation-151,Incorrect Token Burning in Cross-Chain Callbacks will Lead to Token Supply Inconsistency,,invalid,Unsatisfactory,,148
validation-152,Inconsistent Token Handling Across Settlement Modes Can Lead to Token Supply Mismatches and Fund Losses ,,AI generated,Unsatisfactory,,118
validation-157,Lack of Nonce in Cross-Chain Messages Allows Replay Attacks ,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,136
validation-158,Insufficient Uniqueness in Transaction ID Generation Can Lead to Cross-Chain Transaction Conflicts ,validation-356,similar to findings-2 but fail to mention DOS,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,115
validation-159,Improper handling of cross-chain transaction modes can lead to fund loss or freezing,,invalid,Unsatisfactory,,185
validation-161,Lack of chainId in Cross-Chain Transaction Hash Leads to Replay Attacks,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,123
validation-172,In settlement.cairo::receive_cross_chain_msg - the message will always be marked with Status::SUCCESS,validation-172,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L135,166
validation-178,settlement.cairo doesn't process callback correctly leading to CrossChainMsgStatus marked as SUCCESS even if it failed on destination chain,validation-178,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/settlement/src/settlement.cairo#L420,151
validation-18,Incorrect decimals Setting for ckrBTC Token May Lead to User Confusion and Inaccurate Transaction Amounts,validation-18,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/ckr_btc.cairo#L78,25
validation-181,"Standard ERC20 tokens are not fully usable in mode MintBurn, LockMint and BurnUnlock.",validation-181,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L225-L236,100
validation-182,"handler.receive_cross_chain_callback doesn't process transaction status correctly, always marking it as SETTLED even if the transaction failed on destination chain",findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,100
validation-183,Lack of Error Handling for Mode and Status,,AI generated,Unsatisfactory,,68
validation-184,No access control in 'send_cross_chain_msg' can lead to DoS attacks.,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,111
validation-186,Lack of Proper Event Emission in Critical Function,,AI generated,Unsatisfactory,,48
validation-187,Accepting all ERC20 tokens is not safe,,QA,Unsatisfactory,,61
validation-188,User lose his funds when transaction fails on target chain,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,59
validation-190,Transaction Front-running can cause funds to be lost/locked on origin chain.,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,65
validation-191,Funds lost/locked on failed transaction in Handler Contract,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,101
validation-192,Missing Checks for Address(0),validation-192,QA,Unsatisfactory,,91
validation-195,Misspelled Function Name ,,QA,Unsatisfactory,,23
validation-196,Users may not be able to unlock funds if there aren't enough tokens to withdraw from a HandlerContract.,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,129
validation-197,required_validators limitation may be bypassed by malicious validators,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,52
validation-198,Upgradable contracts are not properly initialized,findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,26
validation-2,Setting new required validators will lead to DoS of a xchain message,findings-47,"invalid, more validators could sign",Unsatisfactory,,34
validation-20,Minimum required validators in signatures verification can be bypassed,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,86
validation-200,Inadequate Protection Against Unauthorized Initialization in Upgradable Contract,findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,28
validation-202,send_cross_chain_msg Function in ChakraSettlement.sol Should Only be Invoked by a Valid Handler,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,163
validation-203,send_cross_chain_msg Function in settlement.cairo Should Only be Invoked by a Valid Handler,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,81
validation-204,from_chain is not included in the signature verify in receive_cross_chain_callback(),findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,106
validation-205,inconsistent txid between ChakraSettlement and ChakraSettlementHandler,validation-356,similar to findings-2 but fail to mention DOS,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,110
validation-206,signature replay in cario receive_cross_chain_msg,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,77
validation-207,Inconsistent tx_id between ChakraSettlement and ERC20Handler in cairo,validation-356,similar to findings-2 but fail to mention DOS,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,86
validation-208,Improper txid generation break the invariants,validation-108,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L183,31
validation-209,required_validators_num limitation can bypassed,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,46
validation-21,Missing `disableInitializers` Call in Proxy Upgradeable Contract Constructor,findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,70
validation-211,Improper state update break the invariants,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,61
validation-219,Non-functional set_required_validators_num in BaseSettlement,findings-8,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/BaseSettlement.sol#L121-L126,48
validation-220,In the mode LockMint the funds locked in the handler contract cannot be withdrawn or unlocked.,findings-30,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L127,140
validation-222,The `upgrade()` function does not execute a constructor,validation-222,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/ckr_btc.cairo#L227,41
validation-223,Missing Checks for Removing Managers in settlement.cairo and ckr_btc.cairo ,,no impact,Unsatisfactory,,94
validation-224,The Handler Receiving a Cross-chain Message Must be on the Whitelist for the Source Chain,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,31
validation-225,Missing call to _disableInitializers function,findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,45
validation-226,Transactions ids may not be equals between the handler and the settlement contract.,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,159
validation-227,ERC20 transfer function gas limitation in ChakraSettlementHandler,,AI generated,Unsatisfactory,,73
validation-229,Lack of withdraw or pull mechanism causes funds to be stuck ,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,96
validation-230,Missing check on mode in BaseSettlementHandler::_Settlement_handler_init function,,insufficient proof on how user receive token on the other chain,Unsatisfactory,,28
validation-231,Funds will be lost from BurnUnlock due to burning and if there is an error in the other chain,validation-579,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L130,72
validation-235,Inconsistent decimals of ckrBTC between Starknet and other evm compatible chains,validation-18,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/ckr_btc.cairo#L78,40
validation-236,No input validation in 'ChakraSettlementHandler::cross_chain_erc20_settlement' can lead to loss of funds.,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,227
validation-237,receive_cross_chain_callback in handler_erc20.cairo doesn't handle the case of failed cross chain message,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,71
validation-24,"Signature verification can be bypassed, allowing execution of unauthorized cross-chain transactions",,invalid,Unsatisfactory,,54
validation-240,receive_cross_chain_msg on Starknet can be called many times with one valid input,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,31
validation-241,No Storage Gap for Upgradeable Contract Might Lead to Storage Slot Collision,validation-241,OOS,Unsatisfactory,,30
validation-242,No validation of `to_handler` on solidity side `receive_cross_chain_msg` function,,AI generated,Unsatisfactory,,58
validation-247,Callback won't be processed if the mode is MintBurn because of incorrect use of _burnFrom,,invalid. ChakraToken is used,Unsatisfactory,,118
validation-248,Forcing Starknet handlers to be whitlisted on the same chain allows exploit of `BurnUnlock` mode to drain handler funds,validation-248,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L115,86
validation-25,`from_chain` exclusion in validator signatures allows malicious actors to block cross-chain callbacks on source chain,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,127
validation-252,Insufficient gas requirement in cross-chain ERC20 settlement,,AI generated,Unsatisfactory,,60
validation-254,Potential Overflow in Bitmasking Operations,,AI generated,Unsatisfactory,,36
validation-255,Signature Malleability in Cross-Chain Transaction Verification,,AI generated,Unsatisfactory,,29
validation-256,Reentrancy Vulnerability in ERC20 Handler,,AI generated,Unsatisfactory,,31
validation-257,Inconsistent Message Encoding/Decoding,,AI generated,Unsatisfactory,,28
validation-258,Weak Access Control for Manager Role,,invalid,Unsatisfactory,,29
validation-259,Replay Attack Due to Lack of Unique Nonce,,AI generated,Unsatisfactory,,95
validation-26,``  *_init  `` functions can be executed by anyone,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,32
validation-260,Callback Function in handler_erc20.cairo Does Not Verify Message Status from Destination Chain and tx_status will be Set Incorrectly,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,127
validation-261,Lack of Protection Against Malicious Contract Addresses,,AI generated,Unsatisfactory,,58
validation-262,Weak Validation of ERC20 Transfer Data,,AI generated,Unsatisfactory,,69
validation-263,Insufficient Validation in Manager and Operator Roles,,invalid. AI generated,Unsatisfactory,,68
validation-264,`receive_cross_chain_msg` is not checking the status of message when processing,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,45
validation-265,Lack of checking transaction status leads to  transaction replay attack which will drain the contract of funds,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,169
validation-266,Unchecked parameters in `cross_chain_erc20_settlement`,validation-166,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L167-L232,37
validation-267,"When a crossChain transaction fails, user tokens are not refunded, instead they are locked inside contract",findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,73
validation-268,Lack of check for CrossChainTxStatus leads to tickets being replay and loss of funds,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,115
validation-27,"Validator signature verification can be bypassed, allowing execution of unauthorized cross-chain transactions with fewer than required valid signatures",validation-27,invalid. short ciruiting rule,Unsatisfactory,,76
validation-271,An attacker can reuse old message with altered payload,,invalid,Unsatisfactory,,88
validation-272,Type Mismatch in from_address Parameter `uint256` instead of `address`,,invalid. uint256 is used to support Cairo address,Unsatisfactory,,107
validation-273,Signature Verification missing protection from Replay Attacks,,AI generated,Unsatisfactory,,91
validation-274,Missing sender Verification in send_cross_chain_msg Function,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,103
validation-275,`from_handler` is not checked,,invalid,Unsatisfactory,,115
validation-276,Lack of Validation for payload and payload_type ,validation-462,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/settlement/src/settlement.cairo#L337,66
validation-277,Validator Management Flow,validation-582,configuration issue,Unsatisfactory,,93
validation-278,Signatures can be replayed during verification process,,invalid,Unsatisfactory,,74
validation-279,Lack of Message Hash Validation in verifyECDSA Could Allow Forgery or Replay Attacks,,AI generated,Unsatisfactory,,83
validation-280,Lack of Handler Whitelist Validation in cross_chain_erc20_settlement Function,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,62
validation-285,Cross-chain callbacks can be processed for transactions that do not have a Pending status in the created_tx mapping,,"no impact, the function on handler can only be called by settlement",Unsatisfactory,,87
validation-286,ERC20 transfer and transferFrom return values not checked,,OOS bot report,Unsatisfactory,,26
validation-287,Inconsistent nonce management between Handler and Settlement Solidity contracts allows malicious users to block cross-chain ERC20 messages,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,242
validation-288,Invalid settlement handlers can process received cross-chain messages in settlement.cairo,validation-288,validators should not sign malicious message,Satisfactory,,101
validation-289,Inconsistent transactions count management between Handler and Settlement Cairo contracts allows malicious users to block cross-chain ERC20 messages of Starknet,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,156
validation-29,Manipulation of cross-chain transaction status via unverified `from_chain` parameter,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,61
validation-290,The signatureVerifier does not detect whether the validators or signatures is duplicated.,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,88
validation-291,Cairo's settlement.receive_cross_chain_msg can be triggered multiple times.,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,112
validation-293,Solidity's settlement.receive_cross_chain_msg/callback execution status setting error,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,149
validation-294,The handler.receive_cross_chain_callback is called with wrong txid,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,92
validation-295,Token cross-chain does not take into account the decimal compatibility issue,validation-295,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L123-L131,35
validation-297,Absence of cross-chain ERC20 values validation in Cairo contracts,validation-166,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L167-L232,66
validation-299,MessageV1Codec: Reading the id of msg will return a wrong id,validation-299,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/libraries/MessageV1Codec.sol#L76-L78,79
validation-3,Funds can be permanently locked up in ChakraSettlementHandler on failed crosschain transfers,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,318
validation-30,Incorrect argument order in `CrossChainHandleResult` event emission leads to incorrect cross-chain message finalization,findings-129,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L235,88
validation-301,Invalid settlement handlers can process received cross-chain messages and callbacks in ChakraSettlement.sol,validation-288,validators should not sign malicious message,Satisfactory,,77
validation-302,verifyECDSA and check_chakra_signatures: verifyECDSA allows for duplicates to sign a msg,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,118
validation-304,"ChakraSettlementHandler.sol & handler_erc20.cairo: If SettlementMode.MintBurn fails, token stay locked",findings-64,,Satisfactory,,25
validation-305,The status of cross-chain messages is not correctly set in the receive_cross_chain_callback function in settlement.cairo,validation-178,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/settlement/src/settlement.cairo#L420,58
validation-306,No refund mechanism when the cross chain transaction fails on the destination chain,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,62
validation-307,CrossChainMsgStatus.Unknow fails which leads to loss of funds/DOS,,invalid,Unsatisfactory,,151
validation-309,Signature replay attack vulnerability: lack of signer signature uniqueness check[SettlementSignatureVerifier.sol::verifyECDSA],findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,51
validation-310,Lack of Validation in `set_required_validators_num` Function,validation-582,configuration issue,Unsatisfactory,,47
validation-311,Improper Address Alignment in to_address Function Leading to Potential Address Spoofing[AddressCast.sol::to_address()],validation-351,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/libraries/AddressCast.sol#L17,54
validation-312,Improper Address Alignment in to_address Function Leading to Potential Address Spoofing[AddressCast.sol::to_bytes()],validation-312,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/libraries/AddressCast.sol#L55-L75,66
validation-314,Inadequate Validation of ERC20 Token Origin and Payload Content ,,spam,Unsatisfactory,,75
validation-315,"No way to cancel L1->L2 messages, user can lose tokens forever",findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,77
validation-317,L2->L1 messages can't be cancelled ,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,43
validation-318,"No limit on payload size, can lead to loss of tokens for user",findings-109,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L146-L155,67
validation-32,Incorrect Storage of Transaction Data Causes Inconsistent State in ChakraSettlementHandler,validation-32,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L160,69
validation-320,ChakraSettlement.sol & settlement.cairo: receive_cross_chain_msg does not verify payload_type,validation-462,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/settlement/src/settlement.cairo#L337,35
validation-321,The verify logic missing check if the validator is already used when verifying signatures,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,26
validation-322,ChakraSettlementHandler.sol and handler_erc20.cairo do not return tokens for failed transactions,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,27
validation-323,"When processing a callback, a malicious actor can force mark a message as Failed even if the message was successful",findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,158
validation-324,Lack of Time-Lock Enforcement in Cross-Chain Settlement Functions,,invalid,Unsatisfactory,,85
validation-328,Incorrect Order of Operations in Validator Management Functions,,Gas optimization,Unsatisfactory,,73
validation-329,Front-running in `txid` generation,,invalid,Unsatisfactory,,70
validation-33,The `ChakraSettlement` contract is missing a handler whitelist,,invalid,Unsatisfactory,,31
validation-330,Inadequate Verification of Duplicate Signatures,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,56
validation-331,Signature Replay Attack in multi-signature mechanism,,invalid,Unsatisfactory,,52
validation-332,Mismatch Risk in Multi-Signature Verification Process,,invalid,Unsatisfactory,,57
validation-333,Incorrect Naming of Settlement Mode: `MintBurn` Instead of `BurnMint`,,invalid,Unsatisfactory,,53
validation-334,Incorrect Function Call: Using `_erc20_lock` Instead of `_erc20_burn` in the `MintBurn` Settlement Mode,validation-638,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L124,80
validation-335,Incomplete Implementation of Cross-Chain Settlement Modes in `receive_cross_chain_callback`,,invalid,Unsatisfactory,,112
validation-336,Lack of Access Control in `receive_cross_chain_callback` and `receive_cross_chain_msg Functions`,,invalid,Unsatisfactory,,27
validation-337,Lack of Refund Mechanism in `ChakraSettlementHandler` Contract,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,65
validation-338,Missing `_disableInitializers()` in Chakra Contracts,findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,42
validation-34,Cross-chain messages can be initiated to destination handlers not whitelisted on the Source Chain,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,81
validation-340,Scalability Concerns in the `SettlementSignatureVerifier` Contract Due to Intensive Signature Verification,,invalid,Unsatisfactory,,52
validation-341,Duplicate Reception of Cross-Chain Messages,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,32
validation-343,Missing Access Control in _Settlement_init and()  _Settlement_handler_init() Function,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,70
validation-344,`ChakraSettlement.receive_cross_chain_msg` and `settlement.receive_cross_chain_msg` are suspicious of the hardfork attack,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,94
validation-345,Same `ChakraSettlement.receive_cross_chain_msg` tx can be replayed on different chain,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,59
validation-346,signatures can be abused to bypass validating,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,54
validation-347,Replay attack possible due to missing destination chain check in Solidity ,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,65
validation-348,Replay attack is possible due to missing tx status check in Cairo ,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,55
validation-349,The handler receiving the cross-chain message (in Solidity) is not properly validated breaking the main invariant,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,52
validation-35,Early burn in `BurnUnlock` mode can lead to permanent loss of users' assets if cross-chain messages fail,validation-579,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L130,136
validation-350,Users can experience loss of funds if the transaction on the other chain fails due to missing refund  mechanism (Solidity),findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,40
validation-351,Truncation Issue When Casting `bytes32` to `address` in `to_address` Function,validation-351,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/libraries/AddressCast.sol#L17,68
validation-352, Truncation Vulnerability in `MessageV1Codec.sol` Due to Incorrect `id` Type Casting,validation-299,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/libraries/MessageV1Codec.sol#L76-L78,88
validation-356,Anyone can manipulate user nonce (nonce_manager) in settlement contract,validation-356,similar to findings-2 but fail to mention DOS,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,289
validation-357,Incorrect Hashing Implementation,validation-85,invalid,Unsatisfactory,,140
validation-359,`TokenRoles.sol` contract can be upgraded by anyone,validation-730,invalid,Unsatisfactory,,50
validation-360,`TokenRoles.sol` is missing `UUPSUpgradeable` initialization,validation-730,invalid,Unsatisfactory,,65
validation-361,Improper Access Control in __TokenRoles_init Function,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,76
validation-363,Missing input validation in `handler_erc20::cross_chain_erc20_settlement(...)` breaks core invariant,validation-166,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L167-L232,95
validation-366,no check about to_handler in ChakraSettlementHandler::cross_chain_erc20_settlement,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,37
validation-367,Invalid token address used in `ChakraSettlementHandler::cross_chain_erc20_settlement(...)` leading to invalid transaction creation and event emission,validation-32,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L160,149
validation-369,"Valid and already processed messages from Starknet to EMV(e.g. Optimism) chain can be submitted to another EVM chain(Polygon, Ethereum, ZkSync etc)",findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,177
validation-37,Users' assets remain permanently locked if cross-Chain message fails,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,141
validation-371,Different ERC20 decimals on different chains are not handled,validation-295,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L123-L131,201
validation-372,ChakraSettlementHandler::receive_cross_chain_callback breaks the invariant about the tx status,findings-99,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L311-L313,58
validation-373,"Anyone can cause discrepancy/manipulation in txId's in ChakraSettlement & ChakraSettlementHandler contracts of any particular address's cross chain erc20 settlement transaction, causing callback functions to always revert.",findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,166
validation-374,Any user can reinitialize and take complete control of ChakraSettlement using BaseSettlement's public _Settlement_init function ,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,26
validation-375,Malicious User can break the protocol of another by incrementing his nonce,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,142
validation-376,Any user can reinitialize and take complete control of ChakraSettlementHandler using BaseSettlementHandler's public _Settlement_handler_init function ,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,28
validation-378,Any user can reinitialize and take complete control of ChakraToken using public __TokenRoles_init function of TokenRoles,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,28
validation-379,`ChakraSettlement.send_cross_chain_msg` can be abused to DOS `ChakraSettlementHandler.receive_cross_chain_callback`,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,44
validation-38,Incorrect settlement mode used on the destination chain,,admin should not whitelist handler with invalid mode,Unsatisfactory,,108
validation-383,No return of locked tokens if cross chain message is failed,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,26
validation-384,`ChakraSettlement::receive_cross_chain_msg` breaks the invariant because it does not check if the handler is valid,validation-384,validators should check it before signing,Unsatisfactory,,115
validation-385, `ChakraSettlement::processCrossChainCallback` breaks the invariant because it does not check if the handler is valid  ,validation-384,,Unsatisfactory,,65
validation-386,Array slicing in Cairo Utils is wrongly implemented,validation-472,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/utils.cairo#L446,37
validation-387,Cross-Chain ERC20 Settlement Nonce Mismatch Leading to Denial of Service (DoS),findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,417
validation-388,Incorrect `from_address` sent in `settlement::receive_cross_chain_callback(...)` leads to incorrect event emission,findings-41,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L303,146
validation-389,Signatures in `ChakraSettlement::verifySignature()` can be replayed,,invalid. `create_cross_txs[txid].status` is updated and checked,Unsatisfactory,,78
validation-39,Lack of Minimum Validator Requirement in set_required_validators_num Function,,"safe check, QA",Unsatisfactory,,46
validation-391,"If any `receive_cross_chain_msg`, fails by any reason, there's NO way to retry receiving the message & NO current mechanism to refund back the funds/tokens locked/burned(based on mode of settlement) of that user, if FAILED, which leads to direct loss.",findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,135
validation-392,`settlement.send_cross_chain_msg` can be abused to break `handler_erc20.receive_cross_chain_callback`,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,38
validation-393,"Missing validation check in `ckr_btc.cairo::remove_manager` , Manager can accidentally remove self, hence losing priviledges ",,safe check QA,Unsatisfactory,,39
validation-394,Lack of Duplicate Signature Check in `settlement/contracts/SettlementSignatureVerifier::verifyECDSA` Allows Bypassing of `required_validators` Check,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,109
validation-396,Lack of Duplicate Signature Check in `handler/contracts/SettlementSignatureVerifier::verifyECDSA` Allows Bypassing of `required_validators` Check,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,142
validation-397,Lack of Duplicate Signature Check in Four Cairo Functions Allows Bypassing of `required_validators_num`,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,96
validation-398,Lack of Destination Chain Influence in `ChakraSettlement::receive_cross_chain_msg` Signature Input Enables Cross-Chain Attack,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,107
validation-399,"No non-zero address check in `settlement.cairo::constructor`,and `handler_erc20.cairo::constructor` constructors ",validation-403,QA,Unsatisfactory,,34
validation-40,Tokens Locked Due to Invalid `to_chain` and `to_handler` Inputs in ChakraSettlementHandler,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,44
validation-400,Incorrect `from_token` Address Set in `ChakraSettlementHandler::cross_chain_erc20_settlement` Causes Mismatch Across Chains,validation-32,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L160,96
validation-402,The invariant `validate signatures should > required_validators_num` would be easily broken in `settlement.cairo`,,invalid,Unsatisfactory,,49
validation-403,No zero address check on mint `to` at `ckr_btc.cairo::mint_to`,validation-403,QA,Unsatisfactory,,36
validation-404,No zero address check on burn `to` at `ckr_btc.cairo::burn_from` ,validation-403,QA,Unsatisfactory,,37
validation-405,Lack of Storage Gap in **Cairo** Upgradeable Contracts May Cause Storage Slot Collision,,invalid,Unsatisfactory,,51
validation-407,Users can experience loss of funds if the transaction on the other chain fails due to missing refund mechanism (Cairo),findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,40
validation-409,ECDSA Signature Verification Bypass in ChakraSettlementHandler and ChakraSettlement Contracts Leading to Malicious Transaction Acceptance,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,312
validation-41,"The `SettlementSignatureVerifier::verifyECDSA()` function fails to ensure the uniqueness of signatures, allowing an attacker to repeatedly use the same valid signature to bypass the `required_validators` threshold and send unauthorized cross-chain messages.",findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,320
validation-411,Missing validation for cross-chain ERC20 settlement parameters in Cairo,validation-166,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L167-L232,32
validation-412,Incorrect Parameter Type in to_bytes32 Function,,invalid,Unsatisfactory,,89
validation-413,Arbitrary Validator Manipulation by Compromised Manager in ChakraSettlement,validation-460,design choice,Unsatisfactory,,120
validation-414,Governance Vulnerability in ChakraSettlement - Malicious Manager Takeover,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,178
validation-415,Missing _disableInitializers() in UUPS Proxy Implementation Contracts,findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,95
validation-416,Users Can Send Cross-Chain Messages Without Paying Destination Gas Fees on evm chains,validation-481,probably QA,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111-L156,117
validation-417,Users Can Send Cross-Chain Messages Without Paying Destination Gas Fees from StarkNet,validation-481,probably QA,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111-L156,98
validation-418,Incorrect Status Update in processCrossChainCallback Function,,invalid,Unsatisfactory,,103
validation-419,Incorrect Data Shifting in to_bytes32 Function,validation-419,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/libraries/AddressCast.sol#L47-L57,66
validation-42,Missing `_disableInitializers()` call leaves implementation contract vulnerable to unauthorized initialization,findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,26
validation-420,Incorrect Data Shifting in `to_bytes` Function,validation-420,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/libraries/AddressCast.sol#L32-L45,118
validation-422,Incorrect Signature Verification in SettlementSignatureVerifier Contract,findings-13,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L182-L197,94
validation-423,An attacker can replay signatures to receive cross chain message.,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,81
validation-424,An attacker can make `Handler` to receive wrong transaction or to DOS for receiving transaction.,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,273
validation-425,SettlementSignatureVerifier Only One Valid Signatures Is Ever Needed,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,263
validation-43,Inability to update `token_address` on upgrade in handler_erc20.cairo,,AI generated,Unsatisfactory,,37
validation-432,"Because of lack of a check, whether a validator is already being verified or not, a single validator can pass its own signature , `required_validators` number of times, to bypass the requirement, which is not intended by the design, and gives opportunity for validator to behave maliciously",findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,146
validation-435,Missing Role Assignment in `BaseSettlementHandler` Initialization Leading to Potential Access Control Risks,,invalid,Unsatisfactory,,66
validation-436,An attacker can gain a more valuable to_token and profit from the exchange,,invalid,Unsatisfactory,,181
validation-438,`ChakraSettlement::receive_cross_chain_callback` is Vulnerable to DoS Through Nonce Manipulation and Will Always Revert,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,195
validation-439,`settlement::receive_cross_chain_msg` breaks the invariant about updating the transaction status,validation-443,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L135,104
validation-441,Improper Length Calculation in u128_array_slice Function,validation-472,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/utils.cairo#L446,61
validation-443,`receive_cross_chain_callback()` and `receive_cross_chain_msg()` in `settlement.cairo` break the invariant about updating the transaction status,validation-443,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L135,163
validation-444,`handler_erc20::cross_chain_erc20_settlement` has no input validation which breaks the invariant,validation-166,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L167-L232,105
validation-445, No Recovery Mechanism for Failed Cross-Chain Settlements,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,62
validation-446,`cross_chain_erc20_settlement()` and `receive_cross_chain_msg()` in `handler_erc20.cairo` misses checks about the sufficient token balance which breaks the invariant,,invalid,Unsatisfactory,,136
validation-447,In Starknet already processed messages can be re-submitted and by anyone,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,153
validation-448,Lack of pause functionality exposes system to continuous exploitation in case of detected vulnerabilities,validation-448,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L170-L181,48
validation-449,`handler_erc20::cross_chain_erc20_settlement` is using a single nonce instead of a seperate one for each address which breaks the invariant.,validation-449,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L183,104
validation-450,Signatures in `settlement.cairo` are replayable,,invalid. tx_status is updated and checked,Unsatisfactory,,105
validation-451,`settlement::send_cross_chain_msg` uses a single nonce for everyone instead of a seperate which breaks the invariant,validation-449,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L183,64
validation-452,"Increasing `m` value for every signature, whether be it of a validator or not, in `verifyECDSA` function, can give opportunity for validator to act maliciously.",validation-27,invalid. short ciruiting rule,Unsatisfactory,,158
validation-453,An attacker can misalign the tx nonce in `settlement.cairo` with the one in `handler_erc20.cairo` because `send_cross_chain_msg()` can be called by anyone,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,217
validation-454,"Lack of Validation in ""handler_whitelist"" Enables Unauthorized Settlement Execution",,AI generated,Unsatisfactory,,68
validation-455,Malicious validator reuses his own signature `required_validators_num` times or more to validate any message in the Cairo implementation,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,116
validation-456,Starknet handlers ignore the status returned from the destination chain and always finalize the cross-chain messages as successful,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,86
validation-457,Lack of Validation for Cross-Chain Message Destination Handler,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,39
validation-458,Different ERC20 token decimals between Starknet and BSC are not handled,validation-295,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L123-L131,139
validation-46,"`ChakraSettlement::send_cross_chain_msg()` Can Be Called by Anyone, Leading to Malicious Updates in the `nonce_manager` Mapping, Potentially Causing the Program to Fail.",findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,312
validation-460,Malicious managers can add and remove validators allowing them to validate malicious transactions,validation-460,design choice,Unsatisfactory,,63
validation-461,Immediate Effect of Admin Actions on Validator and Handler Requirements Compromises Cross-Chain Transaction Integrity,,QA,Unsatisfactory,,123
validation-462,"In settlement.cairo::receive_cross_chain_msg - the payload_type can be passed by the user, confusing offchain systems",validation-462,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/settlement/src/settlement.cairo#L337,95
validation-463,Critical Access Control Vulnerability in UUPS Upgrade Mechanism.,,invalid,Unsatisfactory,,69
validation-465,Unrestricted Minting in ChakraToken.sol,,AI generated,Unsatisfactory,,59
validation-467,If the status was set to Failed in `ChakraSettlement::processCrossChainCallback` the user's tokens will remain stuck in the `ChakraSettlementHandler`,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,60
validation-468,`receive_cross_chain_callback` in `handler_erc20.cairo` does not check the `cross_chain_msg_status`,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,90
validation-469,malicious user can steal token by repeating calling `settlement.receive_cross_chain_msg` with same parameters,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,65
validation-47,Potential deadlock in cross-chain messages Using `LockUnlock` or `BurnUnlock` settlement modes,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,77
validation-471,arbitrary bad actor can invoke the initialiser and claim ownership ,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,73
validation-473,Signature replay attack can lead to unexpected unlocks and free mints. ,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,54
validation-474,receive_cross_chain_callback in handler contract will revert because of inconsistent txid in handler contract and settlement contract in some case,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,279
validation-475,Unrestricted send_cross_chain_msg Function Vulnerable to DOS Attacks,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,59
validation-476,Duplicate Signature Bypass in Signature Verification Allows Bypassing Minimum Validator Requirement,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,116
validation-477,"`is_valid_handler` check should be made before completion of sending the cross chain settlement, or else it can cause direct loss for users.",findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,87
validation-478,"SettlementSignatureVerifier vulnerable to signature reuse attack, bypassing required_validators limit",findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,52
validation-479,Cross-Chain Signature Replay Vulnerability Enabling Unauthorized Fund Drainage,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,84
validation-480,Birthday Attack Vulnerability in `txid` Generation,,invalid,Unsatisfactory,,75
validation-481,Anyone can call send_cross_chain_message bypassing the cross_chain_erc20_settlement causing the spam messages/events to emit,validation-481,probably QA,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111-L156,123
validation-482,A single validator's signature can be used multiple times in the `verifyECDSA(...)` to bypass the required validators,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,142
validation-484,Signature Uniqueness Weakness in check_chakra_signatures Function,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,62
validation-486,Missing `to_handler` address conversion in ChakraSettlement.sol prevents receiving messages from Starknet,,invalid. from_handler is uint256,Unsatisfactory,,109
validation-487,A manager could leave the protocol permanently without validators and managers in Starknet,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,87
validation-488,A manager could leave the Starknet protocol token without managers and operators permanently in ckr_btc.cairo,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,84
validation-489,Signature Replay Attack Vulnerability in `receive_cross_chain_msg` Function in `settlement.cairo`,,"AI generated, insufficient proof",Unsatisfactory,,209
validation-49,unsafe transfer,,OOS,Unsatisfactory,,48
validation-491,Missing check if the `Status` = `Success` in the Callback,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,103
validation-492,SettlementSignatureVerifier is missing check for duplicate validator signatures,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,239
validation-493,Missing `keccak256` when computing the `message_hash`,validation-85,invalid,Unsatisfactory,,83
validation-494,Missing refund in case cross-chain tx failed ,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,117
validation-495,block reorg can cause loss of funds for certain users,validation-495,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L111-L223,95
validation-496,Only admin should add/remove managers,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,73
validation-497,"In case ChakraSettlementHandlers are deployed at same addresses across chains, replays will be possible",findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,95
validation-498,Validators will have to cover the gas costs on the destination chains,validation-481,probably QA,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111-L156,134
validation-499,`send_cross_chain_msg` in Settlement should have `onlyHandler` modifier,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,285
validation-50,Incompatibility in ChakraTokenUpgrade Prevents Token Minting and Burning,,OOS,Unsatisfactory,,29
validation-500,Malicious `to_handler` will drain validator funds.,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,117
validation-501,Cross chain msgs can be replayed on Starknet,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,211
validation-503,`send_cross_chain_msg` vulnerable to phishing attack in `settlement.cairo`,findings-41,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L303,62
validation-506,Malicious validator reuses his own signature `required_validators` times or more to validate any message in the Solidity implementation,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,93
validation-51,'to_chain' is not checked to while cross chain message.,,safe check,Unsatisfactory,,93
validation-510,Invalid messages are replayed as valid if the required validator threshold is lowered because of no expiration mechanism for messages,,admin risk,Unsatisfactory,,56
validation-511,Lack of Minimum Transaction Threshold in `receive_cross_chain_msg` May Lead to DoS Attack,,AI generated,Unsatisfactory,,104
validation-512,There is actually no checks that prevents a non ERC20 token being passed,,attacker just gonna lose funds. no impact,Unsatisfactory,,55
validation-513,Decimals assigned on mutable variable,,invalid,Unsatisfactory,,34
validation-515,Incorrect Decoding and Encoding of Addresses,,invalid,Unsatisfactory,,53
validation-516,No input validation for Encoding/Decoding Functions,,spam,Unsatisfactory,,42
validation-517,Public Visibility of __TokenRoles_init Function,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,34
validation-519,Signature Uniqueness Weakness in `verifyECDSA` Function,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,80
validation-520,Lack of Storage Gaps in Inheritance Chain of Upgradeable Contracts,validation-241,OOS,Unsatisfactory,,58
validation-521,Function burn() in ChakraToken is implemented incorrectly,,invalid,Unsatisfactory,,43
validation-522,Signature Uniqueness Weakness in `verifyECDSA` Function in `/settlement/contracts/SettlementSignatureVerifier.sol`,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,83
validation-523,`receive_cross_chain_callback` vulnerable to phishing attack in `settlement.cairo`,findings-41,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L303,39
validation-524,Signatures in `ChakraSettlement::receive_cross_chain_msg` are replayable,,invalid. receive_cross_txs[txid].status is used to check,Unsatisfactory,,136
validation-525,Missing `to` parameter validation,,safe check. overinflated severity,Unsatisfactory,,174
validation-526,Anyone can cause a permanent DoS of the execution of the solidity callback function of any address. And `created_tx` instances on cairo's handler will always be desynced,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,302
validation-527,Payload type is not checked to be signed by offchain validators,validation-462,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/settlement/src/settlement.cairo#L337,228
validation-528,Failed messages does not return funds back on the callback function,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,132
validation-529,It is possible to prevent executing the `receive_cross_chain_callback` in the solidity handler,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,152
validation-53,The contract BaseSettlement is vulnerable to Denial of Service (DoS) attacks due to several potential issues,,spam,Unsatisfactory,,135
validation-530,Constructor will not be executed when a Cairo contract will be upgraded,validation-222,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/ckr_btc.cairo#L227,45
validation-531,The Cairo settlement contract can have a state where there are no managers and can not add more. Also nobody will be able to add/remove validors nor set the minimum threshold of signatures required,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,42
validation-532,Wrong data filled in a lot of fields,validation-32,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L160,160
validation-533,Missing checks for `to_chain`,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,53
validation-534,Crosschain replay attack when a chain fork occurs,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,26
validation-535,Cairo' handler implementation revert when the sender handler is not whitelisted instead of returning false,validation-535,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/handler_erc20.cairo#L114-L115,93
validation-536,Cairo's handler `receive_cross_chain_callback` does not handle failed messages,validation-559,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L114,109
validation-537,Problems using tx.origin,findings-41,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L303,90
validation-538,Verification error in SettlementSignatureVerifier,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,121
validation-539,No Direct Settlement Mode Enforcement Across Chains,validation-539,design choice,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L124,71
validation-54,Reentrancy vulnerability in `receive_cross_chain_msg` during ERC-777 cross-chain transfers allows malicious users to drain the protocol,findings-126,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L354,124
validation-541,Missing Critical Inputs Verification in `ChakraSettlement::processCrossChainCallback`,,QA,Unsatisfactory,,68
validation-542,Lack of Validation for Destination Token in Cross-Chain ERC20 Settlement,,QA,Unsatisfactory,,76
validation-543,Managers in the cairo contracts can DoS the whole protocol,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,88
validation-544,Validator Removal and Count Management in  SettlementSignatureVerifier Contract,,invalid,Unsatisfactory,,103
validation-545,Lack of Expiration in Cross-Chain Message Signatures Enables Lingering Permissions Open to Attacks,,invalid,Unsatisfactory,,50
validation-546,Lack of Validation for `required_validators` Parameter Leading to Potential System Inoperability,validation-582,configuration issue,Unsatisfactory,,59
validation-547,Inadequate Three-Way Handshake Protocol for MintBurn Mode in Cross-Chain Token Transfers,validation-638,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L124,61
validation-548,The solidity code does not check the handler whitelist before sending the message,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,78
validation-549,Cross-Chain May Cause Issues Since Tokens May Have Different Decimals Across Chains,validation-295,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L123-L131,113
validation-550,Discrepancies in Transaction ID's Occur Between The Handler and Settlement Contract Can Occur Due To Differences In The Nonce Value By Directly Calling The Settlement Contract,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,357
validation-551,"Missing Access control over critical contracts, leads to several potential risks",findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,58
validation-552,"Missing Access control over `TokenRoles::__TokenRoles_init` function, Leads to several potential risks",findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,192
validation-554,Missing zero address check for owner in `TokenRoles_transferOwnership`,,spam,Unsatisfactory,,124
validation-555,Unconditional Token Burning and Status Update in Cairo ERC20Handler's Cross-Chain Callback,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,67
validation-557,"Initializers are not protected throughout `ChakraSettlement`, `ChakraSettlementUpgradeTest`, `SettlementSignatureVerifier` contracts",findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,58
validation-558,There is No validation on `to_token`,,insufficient proof,Unsatisfactory,,36
validation-559,Inconsistent Handler Validation Behavior in Cairo ERC20Handler's Cross-Chain Callback,validation-559,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L114,91
validation-560,The user's message might be finalized by validators on the wrong chain due to incorrect event emission.,findings-129,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L235,74
validation-561, Signature Replay Attack Possible when Destination Chain is StarkNet (using Cairo Contract),findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,82
validation-564,"Protocol should return amount deposited by user if transaction not successful, Loss and Locking of funds.",findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,48
validation-565,Duplicate signatures can be used to pass the validator threshold during verification,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,73
validation-566,Inconsistent Handling of `MintBurn` and `BurnUnlock`,validation-579,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L130,55
validation-567,There is no way for users to retrieve locked funds after failed cross-chain message,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,224
validation-568,Lack of message ordering may lead to failed transactions,,invalid,Unsatisfactory,,47
validation-569,Missing Length check in function “deocde transfer” in ERC20CodecV1.sol leading to unintended behaviour.,,safe check QA,Unsatisfactory,,72
validation-570,`set_required_validators_num` in BaseSettlement contract does not actually change the required amount of signatures,findings-8,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/BaseSettlement.sol#L121-L126,95
validation-571,Failed to use of ERC20BunableUpgradeable.sol contract in BaseSettlementHandler.sol,,invalid,Unsatisfactory,,25
validation-572,Token inflation and unsettled message  due to nonces msg_count & tx_count being out of sync in handler_erc2.cairo & settlement.cairo,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,226
validation-573,No Refunding When the Operation Fails,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,47
validation-574,Failed to check whether the handler receiving a cross-chain message is on the whitelist for the source chain,,invalid recommendation,Unsatisfactory,,63
validation-575,Burn/Unlock Mode In Handler Contract Can Prevent Users From Accessing Their Tokens On Either Chain If The Transaction Reverts,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,73
validation-576,Loss of funds if user gives incorrect to_chain parameter while calling cross_chain_erc20_settlement() in ChakraSettlementHandler.sol ,,AI generated,Unsatisfactory,,38
validation-577,Lock/Unlock Mode In Handler Contract Can Prevent Users From Accessing Their Tokens On Either Chain If The Transaction Reverts,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,79
validation-579,Permanent loss of user tokens on both chains if `BurnUnlock` mode fails because of flawed burning pattern,validation-579,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L130,174
validation-58,Missing Refund Functionality for Failed Cross-Chain Transactions,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,37
validation-581,ailure to update/check the crosschainMsgstatus In chakraSettlementHander.sol which will stop the mintburn mode from burning in receive_cross_chain callback.,,insufficient proof,Unsatisfactory,,90
validation-582,Missing checks in `set_required_validators_num` & `remove_validator` will lead to reverts during receiving messages/callbacks,validation-582,configuration issue,Unsatisfactory,,87
validation-583,Missing `disableinitializers()` in constructor can lead to malicious takeover of the implementation contract,findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,53
validation-584,`receive_cross_chain_msg` on starknet can be called multiple times to steal funds,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,94
validation-585,Lack of Gas Refund Mechanism for Unused Gas in Cross-Chain Transactions,,invalid,Unsatisfactory,,27
validation-586,Missing revert for unsupported `SettlementMode` in `ChakraSettlementHandler::cross_chain_erc20_settlement`,validation-586,no impact,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L123-L131,37
validation-587,Role Is Not Being Transferred Along With Ownership Transfer,findings-54,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/BaseSettlement.sol#L12,39
validation-588,"The remove_manager() method does not have a minimum number of managers, which may cause all managers to be deleted.",validation-588,QA,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/ckr_btc.cairo#L148,83
validation-589,The chakra_operators privileged role can destroy any user's funds.,validation-649,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraToken.sol/#L79,65
validation-590,One Validator Can Sign Multiple Times And Be Counted As Multiple Validators Signing (Solidity),findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,34
validation-591,Signature reuse,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,36
validation-592,One Validator Can Sign Multiple Times And Be Counted As Multiple Validators Signing (Cairo),findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,35
validation-593,The Number Of Required Validators on Starknet Can Be Set To Zero,,safe check QA,Unsatisfactory,,50
validation-595,"Received Cross Chain Message Status Is Not Checked In Settlement, Message ID Is Not Checked In Handler (Cairo)",findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,39
validation-596,Received Cross Chain Message Chain ID Is Not Checked In Settlement Or Handler (Solidity),findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,53
validation-597,Only a single validator signature can be used to bypass the required multiple signatures threshold,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,64
validation-598,Both the Solidity and Cairo code implementation do not support fee-on-transfer ERC20 tokens,validation-368,OOS,Unsatisfactory,,179
validation-599,Tokens Remain Locked Or Burned If Cross Chain Callbacks Fail (Cairo and Solidity),findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,45
validation-6,Unprotected Initialization Function Allows Multiple Calls in BaseSettlement,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,88
validation-60,Incorrect Event Parameter in `ChakraSettlementHandler::cross_chain_erc20_settlement()` Function,validation-32,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L160,81
validation-600,Cross Chain Callback Status Is Not Checked And Tokens Are Still Burned In The ERC20 Handler For Failed Callbacks (Cairo),findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,40
validation-602,Signatures can be reused across multiple EVM chains to steal funds,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,70
validation-603,send_cross_chain_msg should only be called by the handler contract to prevent inconsistency in the tx id of the user,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,78
validation-605,Missing check for return value on `transferFrom()` and `transfer()` in `handler_erc20.cairo` contract,findings-53,OOS,Unsatisfactory,,50
validation-606,"On Cairo, Discrepancies in Transaction ID's Occur Between The Handler and Settlement Contract Can Occur Due To Differences In The `msg_count` and `tx_count` Values By Directly Calling The Settlement Contract, Causing Callbacks To Always Fail",findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,94
validation-607,User and protocol are unable to cancel cross-chain message when it has not been processed for a long time,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,213
validation-608,Potential DOS in contract inheriting `UUPSUpgradeable.sol`,validation-730,invalid,Unsatisfactory,,44
validation-609,Permanent loss of user tokens because tokens are never unlocked back to the user if a locking mode fails,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,134
validation-610,"Reusing a valid signature can be verified by multiple signatures, resulting in all funds in the contract being transferred",findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,116
validation-611,"On Cairo, Burn/Unlock Mode In Handler Contract Can Prevent Users From Accessing Their Tokens On Either Chain If The Transaction Reverts",findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,63
validation-612,Missing Access Control Initialization,,unnecessary,Unsatisfactory,,62
validation-613,Malicious users can fail any validly signed transaction,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,114
validation-614, No means to provide liquidity for Unlock types. LockUnlock and BurnUnlock might always fail.,,design choice,Unsatisfactory,,44
validation-615,"Setting required_validators_num to 0 will completely bypass the signature verification mechanism, allowing any user to forge cross-chain transactions.",validation-660,centralized risk,Unsatisfactory,,64
validation-617,Duplicate Validator signatures bypass multi-signature validation,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,152
validation-618,"On Cairo, Lock/Unlock Mode In Handler Contract Can Prevent Users From Accessing Their Tokens On Either Chain If The Transaction Reverts",findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,73
validation-619,"Verify() function can validate and accept the duplicate signature, to bypass the `required_validators`",findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,47
validation-621,Signature reuse leads to reducing the number of required validators to 1,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,167
validation-622,"After all validators are removed, the system can no longer perform effective signature verification.",,AI generated,Unsatisfactory,,55
validation-623,toAddress() truncation casting,validation-351,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/libraries/AddressCast.sol#L17,51
validation-624,No events emitted when handlers are being added and removed,,QA,Unsatisfactory,,47
validation-625,Transaction Replay in `receive_cross_chain_msg`,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,166
validation-626,Loss of data due to incorrect parse of id,validation-299,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/libraries/MessageV1Codec.sol#L76-L78,27
validation-627,Malicious validator can repeatedly call `receive_cross_chain_msg` to mint more tokens or drain handler's balance,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,56
validation-628,"The remove_manager() method does not have a minimum number of managers, which may cause all managers to be deleted.",validation-588,QA,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/ckr_btc.cairo#L148,52
validation-629,Missing withdraw functionality if `from_handler` not whitelisted. ,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,34
validation-63,Excessive Authority Granted to Managers in the `ckr_btc.cairo` Contract Presents Significant Management Risks,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,101
validation-630,Unsafe use of `transfer()`/`transfer_from()` across Cairo contracts,findings-53,OOS,Unsatisfactory,,33
validation-631,"Funds minted even the callback functionality trigger `from_handler` not whitelisted, Breaks invariants of protocol.",findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,32
validation-633,Any manager can add and remove other managers to manipulate the protocol via Cairo contracts,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,62
validation-634,`verifyECDSA` could be bypassed by using duplicated sigs,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,107
validation-635,wrong created_tx key is used to get wrong created_tx mapping state in receive_cross_chain_callback function because of inconsistent txid in handler contract and settlement contract in some case,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,47
validation-636,Different order of critical event parameters between Cairo and Solidity contracts might make it impossible to transfer between Starknet and EVM chains,,overinflated severity,Unsatisfactory,,79
validation-638,`cross_chain_erc20_settlement(..)` makes an incorrect call to `_erc20_lock` instead of `_erc20_burn` (issue exists in both Cairo and Solidity),validation-638,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L124,130
validation-639,Lack of validation of payload,,spam,Unsatisfactory,,75
validation-64,Cairo settlement contract does not check if the cross-chain message was already received on `receive_cross_chain_msg` which allows malicious users to drain the protocol funds,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,97
validation-640,UUPS Implementation contracts can be taken over and destroyed by malicious users,findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,50
validation-641,The current implementation of the bridge is incompatible with Starknet's unique L1 <-> L2 messaging mechanism,,invalid,Unsatisfactory,,45
validation-642,Unauthorized Nonce Manipulation in Cross-Chain Transactions Causing txid Mismatch and Token Supply Risks,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,66
validation-643,Attacker can mint unlimited tokens on the destination chain due to lack of handler checks in send_cross_chain_msg() in ChakraSettlement.sol,validation-643,"invalid, validators should not approve malicious message",Unsatisfactory,,128
validation-644,`required_validators` setup may out-of-sync for `BaseSettlement` and `SettlementSignatureVerifier`,findings-8,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/BaseSettlement.sol#L121-L126,66
validation-645,Reusing a valid signature may result in funds being diverted,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,45
validation-646,The Whole System Can't Be Paused,validation-448,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L170-L181,29
validation-647,receive_cross_chain_msg in settlement.cairo does not check that the txid status is Unknow.,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,62
validation-648,ERC20 Token which will be sent to the destination chain will be locked on the contract handler / burned if the cross chain message FAILED,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,128
validation-649,OPERATOR_ROLE Can Burn Tokens from Any Account Arbitrarily,validation-649,design,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraToken.sol/#L79,62
validation-650,DoS of while calling ChakraSettlement.sol::receive_cross_chain_callback() due to nonces nonce_manager being out of sync in ChakraSettlementHandler.sol and ChakraSettlement.sol,findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,121
validation-651,Front-running vulnerability in ChakraSettlement.receive_cross_chain_callback due to unverified from_chain parameter,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,65
validation-652,invalid addresses can bypass validation check in `addressCast`,,no clear impact. insufficient proof,Unsatisfactory,,54
validation-653,"The remove_validator method allows the status of all validators to be set to false, which will cause the contract to fail to pass the signature verification logic and the system will no longer be able to operate normally.",validation-663,invalid,Unsatisfactory,,46
validation-654,Lack of Access Control in receive_cross_chain_msg and receive_cross_chain_callback Functions Allows Front-Running and Unauthorized Execution,,invalid,Unsatisfactory,,63
validation-655, Attacker can mint unlimited tokens on the destination chain due to lack of handler checks in send_cross_chain_msg()  in settlement.cairo,validation-643,"invalid, validators should not approve malicious message",Unsatisfactory,,36
validation-657,MSTORE is different on zkSync ,,insufficient proof,Unsatisfactory,,25
validation-658,"`required_validators` is set to 0, which completely bypasses the validator multi-signature mechanism",validation-658,"admin risk, OOS",Unsatisfactory,,59
validation-659,Signature Replay attack In `receive_cross_chain_callback` in `settlement/ChakraSettlement.sol`,,AI generated,Unsatisfactory,,67
validation-660,The number of `required_validators` can be set to zero allowing a single compromised validator to manipulate the protocol,validation-660,centralized risk,Unsatisfactory,,31
validation-661,New Manager Can Remove Original Owner and Take Control,findings-50,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/ckr_btc.cairo#L134,58
validation-662,Reusing a valid signature may result in funds being diverted,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,46
validation-663,"The remove_validator method allows the status of all validators to be set to false, which will cause the contract to fail to pass the signature verification logic and the system will no longer be able to operate normally.",validation-663,invalid,Unsatisfactory,,49
validation-664,Funds collected on source chain are not refundable in case of failure on dest chain,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,29
validation-665,"`required_validators` is set to 0, which completely bypasses the validator multi-signature mechanism",validation-658,"admin risk, OOS",Unsatisfactory,,64
validation-666,Wrong data saved in the cross-chain transaction struct,validation-32,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L160,101
validation-667,`Chakra(ckrBTC)` could become managerless,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,81
validation-668,Failed transactions are wrongly/unfairly non-retryable,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,89
validation-669,Cross chain messages and callbacks would be processed even with insufficient signatures,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,105
validation-67,Improper access control on Cairo contracts for manager management,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,69
validation-670,whitelist_handlers is not checked in ChakraSettlementHandler.cross_chain_erc20_settlement which may lead to locked funds,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,58
validation-671,"Protocol assume `from_handler` will be fit in `felt252`, this may cause unintended behavior",,insufficient proof,Unsatisfactory,,59
validation-673,Invalid protocol invariant when validating Starknet addresses,validation-166,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L167-L232,41
validation-674,Default admin role not revoked on ownership transfer provides old owner address with same privileges,findings-54,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/BaseSettlement.sol#L12,81
validation-675,Cross-Chain Transaction Status Manipulation Vulnerability,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,83
validation-676,"Discrepancy in datatype of parameters while processing sending cross chain message, can lead to failure of signature verification while receiving.",,invalid,Unsatisfactory,,141
validation-677,Starknet is unable to receive cross-chain messages using protocol,,invalid,Unsatisfactory,,82
validation-678,"Tokens Stuck in Protocol if Message Fails at destination, Leading to Permanent Loss of User Funds",findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,137
validation-679, Users Can Lose Funds Due to Admin's Handler Removal Action,findings-64,different scenario but basically root cause is still no refund mechanism,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,70
validation-680,Inconsistent Decimal Handling for ERC20 Tokens Across Chains Can Cause Loss of Funds,validation-295,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L123-L131,60
validation-681,Malicious validator/proposer can steal tokens and cause other disruptions due to signature replay in settlement::check_chakra_signatures().,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,105
validation-682,Incorrect Interface Dispatcher Usage in Settlement Contract,,invalid,Unsatisfactory,,51
validation-683,A single validator signature can be reused to bypass the required validators ode Cairo contracts,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,55
validation-684,Exploitation of No-Gas Fee Model in Cross-Chain Transactions Leading to Validator Financial Burden,validation-481,probably QA,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111-L156,64
validation-685,Inconsistent Mode Handling in Cross-Chain Transaction Processing,validation-579,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L130,72
validation-686,Incorrect Handling of BurnUnlock Mode in receive_cross_chain_callback Leads to Token Supply Inflation,validation-579,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L130,36
validation-687,Signature Reuse Vulnerability in verifyECDSA,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,92
validation-688,Potential Unauthorized Token Spending in cross_chain_erc20_settlement,,AI generated,Unsatisfactory,,95
validation-689,Protocol will be unable to send cross-chain messages to any other EVM chains from Starknet blockchain.,,invalid,Unsatisfactory,,80
validation-690,Incorrect Byte Extraction in to_bytes Function,validation-420,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/libraries/AddressCast.sol#L32-L45,72
validation-691,Received cross chain messages can be replayed on Starknet(Cairo) contracts,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,90
validation-694,Setting handlers to BurnUnlock would cause issues,findings-30,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L127,35
validation-695,Setting handlers type to LockMint would cause issues,findings-30,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L127,37
validation-696,An attacker can steal ownership of implementation contracts `SettlementSignatureVerifier.sol` and `ERC20CodecV1.sol`,findings-19,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L10,77
validation-697,Multiple Signatures from Single Validator Can Be Counted in Verification Process,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,87
validation-698,ECDSA Signature Verification Vulnerabilities in SettlementSignatureVerifier Contract,,invalid,Unsatisfactory,,76
validation-7,Unprotected Initialization Function Allows Multiple Calls in BaseSettlementHandler,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,108
validation-700,A block reorg can leave users with extra tokens ,,insufficient proof,Unsatisfactory,,58
validation-702,Complete DoS in settlement.cairo::check_chakra_signatures() due to incorrect signature verification logic implementation,validation-702,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/settlement/src/settlement.cairo#L174,43
validation-703,Signature threshold is always 1,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,190
validation-704,MIssing Signature Duplicate check in SettlementSignatureVerifier::verifyECDSA() will cause loss of funds to protocol,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,47
validation-706,The signed message status for received callbacks is not considered in Cairo contracts,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,94
validation-707,`SettlementSignatureVerifier` Fails to Validate Smart Contract Wallet Signatures from Validators,,not support ERC 1271,Unsatisfactory,,70
validation-708,Missing from_chain parameter in message_hash allows attacker to block callbacks,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,193
validation-710,Protocol does not handle failed cross-chain transactions,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,46
validation-711,User is vulnerable to signature replay attacks because nonce is not tracked and incremented in cairo contracts.,,invalid. cairo has `tx_count`,Unsatisfactory,,66
validation-712,Anyone steals user tokens by front-running `receive_cross_chain_msg`,,insufficient proof,Unsatisfactory,,116
validation-713,Block Reorganization Vulnerability in Cross-Chain Transaction Handling Leads to Inconsistencies and Potential Double-Spending,,AI generated,Unsatisfactory,,68
validation-714, `set_chain_name` function allows the to change e without any restrictions or checks,,admin risk OOS,Unsatisfactory,,85
validation-715,`check_chakra_signatures` function fails to prevent duplicate signatures,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,52
validation-716,`set_required_validators_num` doesn't check if the new value is less than or equal to the current number of validators ,,invalid,Unsatisfactory,,109
validation-717,Wrong sender address stored in the cross-transaction struct for the Cairo contracts,validation-87,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/handler_erc20.cairo#L188,44
validation-718,`verifyECDSA` function doesn't check if the total number of valid signatures exceeds the `required_validators`,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,113
validation-719,Tokens are not refunded on source chain when destination call fails,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,107
validation-721,ERC20 tokens with different decimals on different chain can lead to users benefitting/losing more tokens,validation-295,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L123-L131,52
validation-722,`message_hash_receive ` function doesn't include `to_chain` parameter in the initial hash calculation,,AI generated,Unsatisfactory,,102
validation-723,Insufficient Access Controls in Critical Cross-Chain Functions,,invalid,Unsatisfactory,,48
validation-724,Senders of failed transactions have no way to get back the funds they have locked ,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,28
validation-725,Cross-Chain Replay Attacks Due to Absence of Chain ID,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,41
validation-726,Manager (non-trusted entity) can call `renounceOwnership()` revoking their role and causing DoS on add/remove validator.,validation-726,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/SettlementSignatureVerifier.sol#L120-L139,58
validation-727,Missing parameters in txid hash compute,,invalid. payload included in message_hash ,Unsatisfactory,,78
validation-728,`remove_manager` function doesn't check if the manager being removed is the last manager,validation-588,QA,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/ckr_btc.cairo#L148,64
validation-729,Slicing an array includes the last index,validation-472,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/utils.cairo#L446,46
validation-730,TokenRoles contract does not implement `_authorizeUpgrade` & `__UUPSUpgradeable_init()`,validation-730,invalid,Unsatisfactory,,24
validation-731,Users would be minted more tokens on the destination chain when ChakraToken decimals are different,validation-295,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L123-L131,31
validation-732,Off-chain validators(executors) can be griefed on multiple occasion by malicious transaction creators,,insufficient proof,Unsatisfactory,,31
validation-76,Rogue validators can bypass the minimul required validator signature for processing crossChain transaction,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,155
validation-77,Unchecked External Calls ,,AI generated,Unsatisfactory,,43
validation-78,Failed CallBack transaction will always be recorded as processed,,"in the scenario, input param `status = FAILED` will be set to `create_cross_txs[txid].status = status;` anyway",Unsatisfactory,,203
validation-79,Insufficient signature verification in Cairo contract,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,160
validation-8,Potential storage corruption during contract upgrades,validation-241,OOS,Unsatisfactory,,28
validation-80,No Validation on chain_name in Constructor,,invalid,Unsatisfactory,,47
validation-81,Lack of input validation ,,spam ,Unsatisfactory,,105
validation-82,Insufficient Signature Verification (Signature Replay Attack),,AI generated,Unsatisfactory,,72
validation-88,"`settlement.cairo::send_cross_chain_msg()` lacks a permission check, allowing unauthorized users to call this method and increment `tx_count`.",findings-2,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L118,179
validation-89,Lack of Mechanism for Handling Failed Cross-Chain Messages potentially locking/burning ERC20 tokens permanently,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,153
validation-9,Unprotected Initialization Function Allows Unauthorized Ownership Transfer,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,87
validation-90,Insufficient Input Validation in Cross-Chain Transaction Processing,,spam,Unsatisfactory,,111
validation-92,"The `settlement.cairo::check_chakra_signatures()` Function Does Not Ensure Signature Uniqueness, Allowing Attackers to Bypass Validation with Repeated Signatures",findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,71
validation-93,transfer of ownership for Chakra Token will revert,,invalid,Unsatisfactory,,63
validation-97,The required minimum validator should be enforcing and not left to the discretion of the owner,,admin issue,Unsatisfactory,,71
validation-99,There is a problem with the data structure in the inheritance of upgradable contracts,validation-241,OOS,Unsatisfactory,,25
validation-10,Incorrect Argument Passed to __Ownable_init During ERC20CodecV1 Contract Initialization ,,invalid,Unsatisfactory,,74
validation-101,Tokens are incorrectly burned  at source chain for failed cross-chain transactions.,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,120
validation-102,Cairo version of cross_chain_erc20_settlement() function misses address validation and amount validation,validation-166,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L167-L232,53
validation-103,There is no nonce increase in the handler_erc20,validation-449,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L183,43
validation-104,The creation of txId on the Starknet is incorrect potentially breaking compatibility with ChakraSettlementHandler,validation-108,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L183,61
validation-105,Lack of duplicate signature check in verifyECDSA function,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,150
validation-108,cross_chain_msg_id is generated differently on Ethereum and Starknet,validation-108,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L183,55
validation-110,send_cross_chain_msg() misses msg.sender parameter on Starknet ,,invalid,Unsatisfactory,,71
validation-112,"After the `is_valid_handler` check fails, the function should immediately return or revert to prevent further execution with an invalid `from_handler`. ",,AI generated,Unsatisfactory,,89
validation-115,"The `verifyECDSA` function doesn't handle the case of an empty signature array correctly. It immediately returns false if there are no signatures, even though the invariant expects it to return true for `sign_type == 0`.",,AI generated,Unsatisfactory,,102
validation-119,"In the condition `validators[msgHash.recover(sig)] && ++m >= required_validators`.  Even if the signature is valid and the recovered address is a validator, the function will return false if `m` is not greater than or equal to `required_validators`.",,invalid. AI generated,Unsatisfactory,,72
validation-122,The `remove_validator` function does not check if the validator being removed actually exists in the `validators` mapping. It only checks if the caller has the `MANAGER_ROLE`.,,AI generated,Unsatisfactory,,93
validation-129,Status Unknow is not checked on the Starknet when receiving tx,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,54
validation-130,Settlement contract is mistakenly used for the handler contract when assigning ReceivedCrossChainTx struct,validation-130,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L211,63
validation-131,Received tx can never be set to FAILED status on Starknet,validation-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L354,65
validation-132,It'll not be possible to process callback if the transaction reverts on the destination chain,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,54
validation-134,`MANAGER_ROLE` is inconsistently granted/revoked within the protocol,findings-107,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L245-L273,103
validation-135,Missing `ERC20Method` validation at destination allows non-transfer tx to be handled as transfers.,findings-80,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L318-L351,83
validation-136,Incorrect checking of supported handler on Starknet,validation-136,QA,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/handler_erc20.cairo#L145,42
validation-137,Anybody can change the payload type on the destination chain and set tx to FAILED,validation-462,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/settlement/src/settlement.cairo#L337,72
validation-141,"When using the `BurnUnlock` mode, Tokens that should be burned on the source chain might not be.",,invalid,Unsatisfactory,,114
validation-147,Allowance is not reset in ChakraToken when burning from the user violating the spec,,design,Unsatisfactory,,50
validation-15,TokenRoles contract Missing Implementation of _authorizeUpgrade Function,validation-730,invalid,Unsatisfactory,,74
validation-150,"cross-chain settlement may not accurately track the total transaction amounts, leading to inconsistencies and potential loss of funds.",,invalid,Unsatisfactory,,104
validation-153,A user may lose tokens if an error occurs in the destination chain.,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,34
validation-154,Error sending message in ChakraSettlementHandler.cross_chain_erc20_settlement() function will result in incorrect cross-chain service interaction,validation-638,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L124,29
validation-155,Incorrectly writing the function call will result in incorrect functioning of the ChakraSettlementHandler.receive_cross_chain_msg() function.,validation-117,QA,Unsatisfactory,,27
validation-156,Inter-chain messages will not be executed,,invalid,Unsatisfactory,,35
validation-16,TokenRoles contract has Incorrect Argument Count in __Ownable_init Call,,invalid,Unsatisfactory,,57
validation-160,"When creating the `CreatedCrossChainTx` struct and saving it to the `create_cross_txs` mapping, the `to_token` parameter is used instead of the `to_handler` parameter",,invalid,Unsatisfactory,,50
validation-162,ChakraSettlement would not work on zkSync due to the nonce ordering,,invalid,Unsatisfactory,,38
validation-163,Lack of chainId validation can lead to the replay attacks if the chain hard forks,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,37
validation-164,Cross chain replay attack is possible as signature does not depend on chainId,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,53
validation-165,Missing nonce in the message hash calculation allows users to replay tx on the same chain,,invalid,Unsatisfactory,,46
validation-166,A cross-chain message can be initiated with invalid parameters,validation-166,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L167-L232,74
validation-169,Potential Zero address acceptance due to incorrect validation,validation-192,QA,Unsatisfactory,,27
validation-170, Issues with Creation and Sending of a New Cross-Chain Transaction Due to Invalid Handler Address,,user error,Unsatisfactory,,27
validation-171,Incorrect status transition for created cross-chain tx,validation-215,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L418,78
validation-173,Potential replay of cross-chain message processing ,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,90
validation-175, Issues with Data Types in Event and Struct Definitions for Cross-Chain Transactions in BaseSettlementHandler.sol,,invalid,Unsatisfactory,,32
validation-176,Incorrect length calculation in u128_array_slice function,validation-472,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/utils.cairo#L446,100
validation-177,Lack of input validation,,invalid,Unsatisfactory,,38
validation-179,Inefficient looping,,invalid,Unsatisfactory,,45
validation-185,"Even if valid signatures are provided for a non-ECDSA `sign_type`, they will incorrectly fail verification.",,invalid,Unsatisfactory,,75
validation-189,"Signature verification can be bypassed with fewer valid signatures than required, compromising the security of the settlement process.",,invalid,Unsatisfactory,,76
validation-212,Incomplete cross-chain callback signature verification enables cross-chain replay attacks,findings-123,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/settlement/contracts/ChakraSettlement.sol#L183-L192,97
validation-213,Owner cannot remove handler from the whitelist on Starknet,,invalid,Unsatisfactory,,56
validation-214,Any manager can remove the contract owner,findings-50,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/ckr_btc.cairo#L134,65
validation-215,The cross_chain_msg_status that's sent by Chakra Network on Starknet can be bypassed and set to success ,validation-215,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/cairo/handler/src/settlement.cairo#L418,67
validation-216,The user's funds will be burnt on the source chain even if the result of the call failed on the destination chain ,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,96
validation-221,Unrestricted access to send_cross_chain_msg function,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,70
validation-228,"Unrestricted `required_validators` value in `set_required_validators_num` allows setting invalid validator requirements, potentially breaking consensus",validation-582,configuration issue,Unsatisfactory,,46
validation-232,Calldata Slicing Inefficiency Leading to Contract Disruption and Inaccessibility,,gas opt,Unsatisfactory,,86
validation-234,"receive_cross_chain_msg function always returns true, regardless of the outcome of its operations",,"invalid. If any operations fail, the TX revert",Unsatisfactory,,59
validation-238,Error in Implementation of Cross Chain Settlement,,invalid,Unsatisfactory,,118
validation-239,Multi-validator requirement in `signatures` validation can be bypassed.,findings-4,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/SettlementSignatureVerifier.sol#L108-L141,67
validation-243,Potential low `validator_count` for required  signatures quorum,validation-582,configuration issue,Unsatisfactory,,96
validation-244,Unauthorized Caller would Send Cross Chain Messages,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,109
validation-245,Contract Validator Inconsistency During Update in Base Settlement,findings-8,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/BaseSettlement.sol#L121-L126,68
validation-246,Loss of Fund Due to Minting of Token of Burning,,invalid,Unsatisfactory,,140
validation-250,Incorrect message ID parsing due to off-by-one error in `decode_message`,,invalid,Unsatisfactory,,68
validation-269,A malformed `Message` may be obtained upon decoding a given `payload`,,insufficient proof,Unsatisfactory,,148
validation-270,Use  initializer modifier in __TokenRoles_init. ,,insufficient quality,Unsatisfactory,,47
validation-283,"wrong implement of ""verifyECDSA""",,invalid,Unsatisfactory,,45
validation-284,"No check of  mode in ""BaseSettlementHandler""",,no clear impact,Unsatisfactory,,112
validation-292,ChakraSettlementHandler contract has Lack of Return Value Handling in ERC20 Token Transfer on safe_transfer function,,OOS bot report,Unsatisfactory,,78
validation-296,ChakraSettlementHandler has Unchecked mint_to Return Value in External Call from _erc20_mint function,,invalid,Unsatisfactory,,82
validation-298,ChakraSettlementHandler contract has Unchecked burn_from Return Value in _erc20_burn function,,invalid,Unsatisfactory,,95
validation-300,ChakraSettlementHandler contract has Unchecked transferFrom Return Value in _safe_transfer_from During ERC20 Locking,,OOS bot report,Unsatisfactory,,76
validation-308,Array slicing  potentially exceed the intended bounds,validation-472,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/utils.cairo#L446,85
validation-31,Mint / Burn mode is incorrectly handled,validation-638,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L124,74
validation-325,Missing Initialization of `AccessControlUpgradeable` in `BaseSettlementHandler.sol`,,no impact,Unsatisfactory,,68
validation-327,Calculated `message_hash` may be incorrect due to missing validations,,no impact,Unsatisfactory,,60
validation-342,Cross chain callback will fail if source `chain_name` is changed.,,admin risk,Unsatisfactory,,69
validation-354,Unprotected initializer in '__TokenRoles_init' function let any user call it and reinitialize the contract,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,71
validation-355,Unsafe casting from 'uint256' to 'uint160' leads to sending tokens to incorrect address,,invalid,Unsatisfactory,,72
validation-358,Unsafe casting from 'uint256' to 'uint160' leads to sending tokens to incorrect address,,invalid,Unsatisfactory,,62
validation-362,"When the new balance is not equal to the old balance plus the amount, the mint_to function will return false without reverting",validation-362,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/ckr_btc.cairo#L199-L206,74
validation-364,Integer overflow in mint_to funciton,,invalid,Unsatisfactory,,40
validation-368,Lack of support for fee-on-transfer token,validation-368,OOS,Unsatisfactory,,53
validation-377,The `receive_cross_chain_callback(...)` function can be reentered to mint excess tokens on Starknet,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,107
validation-406,validate signatures should  be greater than  required_validators_num,,invalid,Unsatisfactory,,44
validation-408,No Storage Gap for Upgradeable Contracts,validation-241,OOS,Unsatisfactory,,34
validation-410,`ChakraSettlement::receive_cross_chain_callback(...) ` can be used to DOS transactions,findings-11,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/settlement/contracts/ChakraSettlement.sol#L305,145
validation-421,Cross chain transactions are saved with the wrong token address when transactions are created,validation-32,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L160,126
validation-426,send_cross_chain_msg() has no access control on Starknet,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,38
validation-427,Missing nonce in the message hash calculation allows users to replay tx on Starknet,,invalid,Unsatisfactory,,37
validation-428,Missing decimal normalization results in users receiving incorrect token amounts,validation-295,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L123-L131,117
validation-429,CrossChainTxStatus is not set to FAILED even if the cross_chain_msg_status is FAILED on Starknet,findings-84,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/handler_erc20.cairo#L161,71
validation-430,Status MINTED is never set for the Mint / Burn mode on Ethereum,validation-431,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L30,54
validation-431,Status MINTED is never set for the Mint / Burn mode on Starknet,validation-431,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L30,46
validation-433,Bytes / Address types must be used to represent the addresses on EVM and non-EVM chains (on Ethereum),validation-433,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L111,42
validation-434,Bytes / Address types must be used to represent the addresses on EVM and non-EVM chains (on Starknet),validation-433,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/main/solidity/handler/contracts/ChakraSettlementHandler.sol#L111,36
validation-44,ChakraSettlementUpgradeTest contract has Typographical Error in Enum Definition and Usage,,QA,Unsatisfactory,,121
validation-440,Message hash is assigned incorrect values when verifying signatures on Starknet,,invalid,Unsatisfactory,,52
validation-459,inconsistency in sender address when creating cross chain messages on Starknet can lead to loss of funds,validation-87,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/handler_erc20.cairo#L188,126
validation-472,`u64_array_slice`  and `u128_array_slice` will return wrong slices,validation-472,probably just a typo (len vs end),Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/utils.cairo#L446,101
validation-48,ERC20CodecV1 contract has Typographical Error in Function Name deocde_transfer,,QA,Unsatisfactory,,133
validation-505,Rogue validators can drain the handler contract ,findings-131,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/settlement.cairo#L356-L361,28
validation-508,Token decimal difference across various chains is not accounted for ,validation-295,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/handler/contracts/ChakraSettlementHandler.sol#L123-L131,26
validation-514,Missing `UUPSUpgradeable` initialization potentially prevents upgrades,validation-730,unnecessary since __UUPSUpgradeable_init does not do anything,Unsatisfactory,,56
validation-52,BaseSettlement contract has _Settlement_init Function is public but should be internal,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,100
validation-55,"The `initialize` function does not have any checks to prevent it from being called multiple times. Each time it's called, it re-initializes the contract state, allowing mode to be changed.",,invalid,Unsatisfactory,,91
validation-553,`settlement::receive_cross_chain_callback()` creates transactions wrongly on Starknet,findings-66,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L373-L381,125
validation-556,`receive_cross_chain_msg(..)` emits events with wrong values,findings-66,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/cairo/handler/src/settlement.cairo#L373-L381,96
validation-56,Handler.SettlementSignatureVerifier contract has DoS With Block Gas Limit in verifyECDSA Function,,AI generated,Unsatisfactory,,194
validation-562,Failed messages cannot be retried,findings-64,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L392,33
validation-57,The `cross_chain_erc20_settlement` does not check if the sender has sufficient balance before initiating the token transfer.,,spam,Unsatisfactory,,88
validation-601,wrong implement of add_manager and remove_manager,,invalid,Unsatisfactory,,81
validation-604,"Too much power given to ""manager""    Centralization issue",,centralized issue,Unsatisfactory,,64
validation-61,Replaying transactions if the nonce overflows and wraps back to a previously used value.,,invalid,Unsatisfactory,,75
validation-62,Variable declaration mismatch,,invalid,Unsatisfactory,,155
validation-620,"wrong ""initializer"" modifier in initialize function.",,spam,Unsatisfactory,,42
validation-65,SettlementSignatureVerifier contract has a Missing Protection against Signature Replay Attacks in msgHash,,AI generated,Unsatisfactory,,114
validation-66,"nonce is incremented unconditionally even if the `amount` requirement fails. If `amount` is 0, the function will revert due to the failed requirement, but the nonce would have already been incremented.",,spam,Unsatisfactory,,123
validation-68,CreatedCrossChainTx struct has incorrectly assigned values when sending a cross-chain tx,validation-32,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L160,80
validation-69,`send_cross_chain_msg` has no access control on Ethereum,validation-603,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/d0d45ae1d26ca1b87034e67180fac07ce9642fd9/solidity/settlement/contracts/ChakraSettlement.sol#L111,51
validation-70,Settlement.SettlementSignatureVerifier contract has Denial of Service (DoS) with Block Gas Limit in verify function,,invalid,Unsatisfactory,,184
validation-71,Anybody can call TokenRoles_init(),findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,38
validation-72,TokenRoles contract can be reinitialized,findings-63,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/BaseSettlementHandler.sol#L120,38
validation-73,TokenRoles inherits UUPSUpgradeable functionality but it does not initialize it,validation-730,invalid,Unsatisfactory,,66
validation-74,ChakraTokenUpgradeTest uses _authorizeUpgrade() functionality but does not initialize UUPSUpgradeable in the initialize() function,,OOS,Unsatisfactory,,60
validation-83,ChakraSettlement contract has Transaction Order Dependence (TOD) in send_cross_chain_msg function,,AI generated,Unsatisfactory,,221
validation-84,`ChackraSettlement` does not verify that `to_handler` is the receiving address which may result in incorrect state updates,,invalid,Unsatisfactory,,103
validation-85,Potential `EIP712` violation.,validation-85,invalid,Unsatisfactory,,75
validation-86,Missing `chain` & `handler` validation when initiating a cross-chain tx,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,50
validation-87,Incorrect `CreatedCrossChainTx` details are saved when initiating a cross-chain message,validation-87,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/cairo/handler/src/handler_erc20.cairo#L188,105
validation-91,Recipients may receive the wrong token  due to missing `to_token` validation at destination,,validators should not sign invalid message,Unsatisfactory,,105
validation-96,`receive_cross_chain_callback` allows the transaction status to be changed from `Pending` to `Settled` or `Failed` without ensuring that the transaction has been processed and settled on the destination chain.,,invalid,Unsatisfactory,,69
validation-98,Insufficient destination handler validation on the source chain in CharkaSettlementHandler smart contract,findings-44,,Satisfactory,https://github.com/code-423n4/2024-08-chakra/blob/abef77d95866f2fec93270491fc5abc9ab14f86d/solidity/handler/contracts/ChakraSettlementHandler.sol#L120,70